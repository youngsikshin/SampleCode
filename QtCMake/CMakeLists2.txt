cmake_minimum_required(VERSION 2.8)

project(QtCMake)

# Find includes in corresponding build directories
set(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
set(CMAKE_AUTOMOC ON)

# Qt{4,5} have been find_package'd() by FindQGLViewer.cmake
if(Qt4_FOUND)
  include(${QT_USE_FILE})

  QT4_WRAP_UI(UI_HEADERS qtcmakesample.ui)
  QT4_WRAP_CPP(UI_SOURCES qtcmakesample.h)

  include_directories(${QT_INCLUDES})
  set(MY_QT_LIBRARIES ${QT_LIBRARIES})
  message("CMAKE_CXX_COMPILER: " ${QT_INCLUDES})
endif()

if(Qt5_FOUND)
  QT5_WRAP_UI(UI_HEADERS qtcmakesample.ui)
  QT5_WRAP_CPP(UI_SOURCES qtcmakesample.h)

  include_directories(${Qt5Core_INCLUDE_DIRS} ${Qt5Xml_INCLUDE_DIRS} ${Qt5Gui_INCLUDE_DIRS} ${Qt5Widgets_INCLUDE_DIRS} ${Qt5OpenGL_INCLUDE_DIRS})
  set(MY_QT_LIBRARIES ${Qt5Widgets_LIBRARIES} ${Qt5Core_LIBRARIES} ${Qt5Gui_LIBRARIES} ${Qt5Xml_LIBRARIES} ${Qt5OpenGL_LIBRARIES})
  message("CMAKE_CXX_COMPILER: " ${Qt5Core_INCLUDE_DIRS})
endif()


#INCLUDE_DIRECTORIES(${QGLVIEWER_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})

add_library(qtcmakesample_library
  qtcmakesample.cpp qtcmakesample.h
  ${UI_HEADERS} ${UI_SOURCES}
)

add_executable(qtcmakesample main.cpp)

target_link_libraries(qtcmakesample_library g2o_cli_library ${QGLVIEWER_LIBRARY} ${MY_QT_LIBRARIES} ${OPENGL_LIBRARY})
target_link_libraries(qtcmakesample qtcmakesample_library)
